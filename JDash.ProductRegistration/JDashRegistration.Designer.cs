//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JDashRegistrationModel", "FK_Workstation_Workstation", "Registration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JDash.ProductRegistration.Registration), "Workstation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JDash.ProductRegistration.Workstation), true)]

#endregion

namespace JDash.ProductRegistration
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JDashRegistrationEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JDashRegistrationEntities object using the connection string found in the 'JDashRegistrationEntities' section of the application configuration file.
        /// </summary>
        public JDashRegistrationEntities() : base("name=JDashRegistrationEntities", "JDashRegistrationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JDashRegistrationEntities object.
        /// </summary>
        public JDashRegistrationEntities(string connectionString) : base(connectionString, "JDashRegistrationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JDashRegistrationEntities object.
        /// </summary>
        public JDashRegistrationEntities(EntityConnection connection) : base(connection, "JDashRegistrationEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Registration> Registration
        {
            get
            {
                if ((_Registration == null))
                {
                    _Registration = base.CreateObjectSet<Registration>("Registration");
                }
                return _Registration;
            }
        }
        private ObjectSet<Registration> _Registration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Workstation> Workstation
        {
            get
            {
                if ((_Workstation == null))
                {
                    _Workstation = base.CreateObjectSet<Workstation>("Workstation");
                }
                return _Workstation;
            }
        }
        private ObjectSet<Workstation> _Workstation;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Registration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistration(Registration registration)
        {
            base.AddObject("Registration", registration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Workstation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkstation(Workstation workstation)
        {
            base.AddObject("Workstation", workstation);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JDashRegistrationModel", Name="Registration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Registration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Registration object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="registrationName">Initial value of the RegistrationName property.</param>
        /// <param name="purchaseDate">Initial value of the PurchaseDate property.</param>
        /// <param name="registrationCount">Initial value of the RegistrationCount property.</param>
        /// <param name="registrationLimit">Initial value of the RegistrationLimit property.</param>
        /// <param name="firstRegistration">Initial value of the FirstRegistration property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="runtimeLicenseKey">Initial value of the RuntimeLicenseKey property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="subscriptionCount">Initial value of the SubscriptionCount property.</param>
        /// <param name="subscriptionLimit">Initial value of the SubscriptionLimit property.</param>
        public static Registration CreateRegistration(global::System.Int32 id, global::System.String registrationName, global::System.DateTime purchaseDate, global::System.Int32 registrationCount, global::System.Int32 registrationLimit, global::System.DateTime firstRegistration, global::System.String version, global::System.String runtimeLicenseKey, global::System.String productID, global::System.Int32 subscriptionCount, global::System.Int32 subscriptionLimit)
        {
            Registration registration = new Registration();
            registration.ID = id;
            registration.RegistrationName = registrationName;
            registration.PurchaseDate = purchaseDate;
            registration.RegistrationCount = registrationCount;
            registration.RegistrationLimit = registrationLimit;
            registration.FirstRegistration = firstRegistration;
            registration.Version = version;
            registration.RuntimeLicenseKey = runtimeLicenseKey;
            registration.ProductID = productID;
            registration.SubscriptionCount = subscriptionCount;
            registration.SubscriptionLimit = subscriptionLimit;
            return registration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationName
        {
            get
            {
                return _RegistrationName;
            }
            set
            {
                OnRegistrationNameChanging(value);
                ReportPropertyChanging("RegistrationName");
                _RegistrationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationName");
                OnRegistrationNameChanged();
            }
        }
        private global::System.String _RegistrationName;
        partial void OnRegistrationNameChanging(global::System.String value);
        partial void OnRegistrationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PurchaseDate
        {
            get
            {
                return _PurchaseDate;
            }
            set
            {
                OnPurchaseDateChanging(value);
                ReportPropertyChanging("PurchaseDate");
                _PurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseDate");
                OnPurchaseDateChanged();
            }
        }
        private global::System.DateTime _PurchaseDate;
        partial void OnPurchaseDateChanging(global::System.DateTime value);
        partial void OnPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistrationCount
        {
            get
            {
                return _RegistrationCount;
            }
            set
            {
                OnRegistrationCountChanging(value);
                ReportPropertyChanging("RegistrationCount");
                _RegistrationCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationCount");
                OnRegistrationCountChanged();
            }
        }
        private global::System.Int32 _RegistrationCount;
        partial void OnRegistrationCountChanging(global::System.Int32 value);
        partial void OnRegistrationCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistrationLimit
        {
            get
            {
                return _RegistrationLimit;
            }
            set
            {
                OnRegistrationLimitChanging(value);
                ReportPropertyChanging("RegistrationLimit");
                _RegistrationLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationLimit");
                OnRegistrationLimitChanged();
            }
        }
        private global::System.Int32 _RegistrationLimit;
        partial void OnRegistrationLimitChanging(global::System.Int32 value);
        partial void OnRegistrationLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FirstRegistration
        {
            get
            {
                return _FirstRegistration;
            }
            set
            {
                OnFirstRegistrationChanging(value);
                ReportPropertyChanging("FirstRegistration");
                _FirstRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstRegistration");
                OnFirstRegistrationChanged();
            }
        }
        private global::System.DateTime _FirstRegistration;
        partial void OnFirstRegistrationChanging(global::System.DateTime value);
        partial void OnFirstRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastRegistration
        {
            get
            {
                return _LastRegistration;
            }
            set
            {
                OnLastRegistrationChanging(value);
                ReportPropertyChanging("LastRegistration");
                _LastRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastRegistration");
                OnLastRegistrationChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastRegistration;
        partial void OnLastRegistrationChanging(Nullable<global::System.DateTime> value);
        partial void OnLastRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RuntimeLicenseKey
        {
            get
            {
                return _RuntimeLicenseKey;
            }
            set
            {
                OnRuntimeLicenseKeyChanging(value);
                ReportPropertyChanging("RuntimeLicenseKey");
                _RuntimeLicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RuntimeLicenseKey");
                OnRuntimeLicenseKeyChanged();
            }
        }
        private global::System.String _RuntimeLicenseKey;
        partial void OnRuntimeLicenseKeyChanging(global::System.String value);
        partial void OnRuntimeLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CorrectedPurchaseDate
        {
            get
            {
                return _CorrectedPurchaseDate;
            }
            set
            {
                OnCorrectedPurchaseDateChanging(value);
                ReportPropertyChanging("CorrectedPurchaseDate");
                _CorrectedPurchaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CorrectedPurchaseDate");
                OnCorrectedPurchaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CorrectedPurchaseDate;
        partial void OnCorrectedPurchaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCorrectedPurchaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionCount
        {
            get
            {
                return _SubscriptionCount;
            }
            set
            {
                OnSubscriptionCountChanging(value);
                ReportPropertyChanging("SubscriptionCount");
                _SubscriptionCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionCount");
                OnSubscriptionCountChanged();
            }
        }
        private global::System.Int32 _SubscriptionCount;
        partial void OnSubscriptionCountChanging(global::System.Int32 value);
        partial void OnSubscriptionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubscriptionLimit
        {
            get
            {
                return _SubscriptionLimit;
            }
            set
            {
                OnSubscriptionLimitChanging(value);
                ReportPropertyChanging("SubscriptionLimit");
                _SubscriptionLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionLimit");
                OnSubscriptionLimitChanged();
            }
        }
        private global::System.Int32 _SubscriptionLimit;
        partial void OnSubscriptionLimitChanging(global::System.Int32 value);
        partial void OnSubscriptionLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousRuntimeLicenseKey
        {
            get
            {
                return _PreviousRuntimeLicenseKey;
            }
            set
            {
                OnPreviousRuntimeLicenseKeyChanging(value);
                ReportPropertyChanging("PreviousRuntimeLicenseKey");
                _PreviousRuntimeLicenseKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreviousRuntimeLicenseKey");
                OnPreviousRuntimeLicenseKeyChanged();
            }
        }
        private global::System.String _PreviousRuntimeLicenseKey;
        partial void OnPreviousRuntimeLicenseKeyChanging(global::System.String value);
        partial void OnPreviousRuntimeLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubscriptionDate
        {
            get
            {
                return _SubscriptionDate;
            }
            set
            {
                OnSubscriptionDateChanging(value);
                ReportPropertyChanging("SubscriptionDate");
                _SubscriptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionDate");
                OnSubscriptionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubscriptionDate;
        partial void OnSubscriptionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubscriptionDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JDashRegistrationModel", "FK_Workstation_Workstation", "Workstation")]
        public EntityCollection<Workstation> Workstation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Workstation>("JDashRegistrationModel.FK_Workstation_Workstation", "Workstation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Workstation>("JDashRegistrationModel.FK_Workstation_Workstation", "Workstation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JDashRegistrationModel", Name="Workstation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workstation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Workstation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="registrationID">Initial value of the RegistrationID property.</param>
        /// <param name="workstationID">Initial value of the WorkstationID property.</param>
        public static Workstation CreateWorkstation(global::System.Int32 id, global::System.Int32 registrationID, global::System.String workstationID)
        {
            Workstation workstation = new Workstation();
            workstation.ID = id;
            workstation.RegistrationID = registrationID;
            workstation.WorkstationID = workstationID;
            return workstation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegistrationID
        {
            get
            {
                return _RegistrationID;
            }
            set
            {
                OnRegistrationIDChanging(value);
                ReportPropertyChanging("RegistrationID");
                _RegistrationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationID");
                OnRegistrationIDChanged();
            }
        }
        private global::System.Int32 _RegistrationID;
        partial void OnRegistrationIDChanging(global::System.Int32 value);
        partial void OnRegistrationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkstationID
        {
            get
            {
                return _WorkstationID;
            }
            set
            {
                OnWorkstationIDChanging(value);
                ReportPropertyChanging("WorkstationID");
                _WorkstationID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkstationID");
                OnWorkstationIDChanged();
            }
        }
        private global::System.String _WorkstationID;
        partial void OnWorkstationIDChanging(global::System.String value);
        partial void OnWorkstationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JDashRegistrationModel", "FK_Workstation_Workstation", "Registration")]
        public Registration Registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registration>("JDashRegistrationModel.FK_Workstation_Workstation", "Registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registration>("JDashRegistrationModel.FK_Workstation_Workstation", "Registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Registration> RegistrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Registration>("JDashRegistrationModel.FK_Workstation_Workstation", "Registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Registration>("JDashRegistrationModel.FK_Workstation_Workstation", "Registration", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
